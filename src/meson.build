subdir('base')

base_sources = [
  'api' / 'api-arguments.cc',
  'api' / 'api-natives.cc',
  'api' / 'api.cc',
  'ast' / 'ast-function-literal-id-reindexer.cc',
  'ast' / 'ast-value-factory.cc',
  'ast' / 'ast.cc',
  'ast' / 'modules.cc',
  'ast' / 'prettyprinter.cc',
  'ast' / 'scopes.cc',
  'ast' / 'source-range-ast-visitor.cc',
  'ast' / 'variables.cc',
  'baseline' / 'baseline-batch-compiler.cc',
  'baseline' / 'baseline-compiler.cc',
  'baseline' / 'baseline.cc',
  'baseline' / 'bytecode-offset-iterator.cc',
  'builtins' / 'accessors.cc',
  'builtins' / 'builtins-api.cc',
  'builtins' / 'builtins-array.cc',
  'builtins' / 'builtins-arraybuffer.cc',
  'builtins' / 'builtins-async-module.cc',
  'builtins' / 'builtins-atomics-synchronization.cc',
  'builtins' / 'builtins-bigint.cc',
  'builtins' / 'builtins-callsite.cc',
  'builtins' / 'builtins-collections.cc',
  'builtins' / 'builtins-console.cc',
  'builtins' / 'builtins-dataview.cc',
  'builtins' / 'builtins-date.cc',
  'builtins' / 'builtins-error.cc',
  'builtins' / 'builtins-function.cc',
  'builtins' / 'builtins-global.cc',
  'builtins' / 'builtins-internal.cc',
  'builtins' / 'builtins-json.cc',
  'builtins' / 'builtins-number.cc',
  'builtins' / 'builtins-object.cc',
  'builtins' / 'builtins-reflect.cc',
  'builtins' / 'builtins-regexp.cc',
  'builtins' / 'builtins-shadow-realm.cc',
  'builtins' / 'builtins-shared-array.cc',
  'builtins' / 'builtins-sharedarraybuffer.cc',
  'builtins' / 'builtins-string.cc',
  'builtins' / 'builtins-struct.cc',
  'builtins' / 'builtins-symbol.cc',
  'builtins' / 'builtins-temporal.cc',
  'builtins' / 'builtins-trace.cc',
  'builtins' / 'builtins-typed-array.cc',
  'builtins' / 'builtins-weak-refs.cc',
  'builtins' / 'builtins-web-snapshots.cc',
  'builtins' / 'builtins.cc',
  'builtins' / 'constants-table-builder.cc',
  'codegen' / 'aligned-slot-allocator.cc',
  'codegen' / 'assembler.cc',
  'codegen' / 'bailout-reason.cc',
  'codegen' / 'code-comments.cc',
  'codegen' / 'code-desc.cc',
  'codegen' / 'code-factory.cc',
  'codegen' / 'code-reference.cc',
  'codegen' / 'compilation-cache.cc',
  'codegen' / 'compiler.cc',
  'codegen' / 'constant-pool.cc',
  'codegen' / 'external-reference-encoder.cc',
  'codegen' / 'external-reference-table.cc',
  'codegen' / 'external-reference.cc',
  'codegen' / 'flush-instruction-cache.cc',
  'codegen' / 'handler-table.cc',
  'codegen' / 'interface-descriptors.cc',
  'codegen' / 'machine-type.cc',
  'codegen' / 'maglev-safepoint-table.cc',
  'codegen' / 'optimized-compilation-info.cc',
  'codegen' / 'pending-optimization-table.cc',
  'codegen' / 'register-configuration.cc',
  'codegen' / 'reloc-info.cc',
  'codegen' / 'safepoint-table.cc',
  'codegen' / 'source-position-table.cc',
  'codegen' / 'source-position.cc',
  'codegen' / 'tick-counter.cc',
  'codegen' / 'tnode.cc',
  'codegen' / 'turbo-assembler.cc',
  'codegen' / 'unoptimized-compilation-info.cc',
  'common' / 'assert-scope.cc',
  'common' / 'code-memory-access.cc',
  'compiler-dispatcher' / 'lazy-compile-dispatcher.cc',
  'compiler-dispatcher' / 'optimizing-compile-dispatcher.cc',
  'date' / 'date.cc',
  'date' / 'dateparser.cc',
  'debug' / 'debug-coverage.cc',
  'debug' / 'debug-evaluate.cc',
  'debug' / 'debug-frames.cc',
  'debug' / 'debug-interface.cc',
  'debug' / 'debug-property-iterator.cc',
  'debug' / 'debug-scope-iterator.cc',
  'debug' / 'debug-scopes.cc',
  'debug' / 'debug-stack-trace-iterator.cc',
  'debug' / 'debug.cc',
  'debug' / 'liveedit-diff.cc',
  'debug' / 'liveedit.cc',
  'deoptimizer' / 'deoptimize-reason.cc',
  'deoptimizer' / 'deoptimized-frame-info.cc',
  'deoptimizer' / 'deoptimizer.cc',
  'deoptimizer' / 'materialized-object-store.cc',
  'deoptimizer' / 'translated-state.cc',
  'deoptimizer' / 'translation-array.cc',
  'diagnostics' / 'basic-block-profiler.cc',
  'diagnostics' / 'compilation-statistics.cc',
  'diagnostics' / 'disassembler.cc',
  'diagnostics' / 'eh-frame.cc',
  'diagnostics' / 'gdb-jit.cc',
  'diagnostics' / 'objects-debug.cc',
  'diagnostics' / 'objects-printer.cc',
  'diagnostics' / 'perf-jit.cc',
  'diagnostics' / 'unwinder.cc',
  'execution' / 'arguments.cc',
  'execution' / 'clobber-registers.cc',
  'execution' / 'embedder-state.cc',
  'execution' / 'encoded-c-signature.cc',
  'execution' / 'execution.cc',
  'execution' / 'frames.cc',
  'execution' / 'futex-emulation.cc',
  'execution' / 'interrupts-scope.cc',
  'execution' / 'isolate.cc',
  'execution' / 'local-isolate.cc',
  'execution' / 'messages.cc',
  'execution' / 'microtask-queue.cc',
  'execution' / 'protectors.cc',
  'execution' / 'simulator-base.cc',
  'execution' / 'stack-guard.cc',
  'execution' / 'thread-id.cc',
  'execution' / 'thread-local-top.cc',
  'execution' / 'tiering-manager.cc',
  'execution' / 'v8threads.cc',
  'extensions' / 'cputracemark-extension.cc',
  'extensions' / 'externalize-string-extension.cc',
  'extensions' / 'gc-extension.cc',
  'extensions' / 'ignition-statistics-extension.cc',
  'extensions' / 'statistics-extension.cc',
  'extensions' / 'trigger-failure-extension.cc',
  'flags' / 'flags.cc',
  'handles' / 'global-handles.cc',
  'handles' / 'handles.cc',
  'handles' / 'local-handles.cc',
  'handles' / 'persistent-handles.cc',
  'handles' / 'shared-object-conveyor-handles.cc',
  'bigint' / 'bigint-internal.cc',
  'bigint' / 'bitwise.cc',
  'bigint' / 'div-burnikel.cc',
  'bigint' / 'div-helpers.cc',
  'bigint' / 'div-schoolbook.cc',
  'bigint' / 'fromstring.cc',
  'bigint' / 'mul-karatsuba.cc',
  'bigint' / 'mul-schoolbook.cc',
  'bigint' / 'tostring.cc',
  'bigint' / 'vector-arithmetic.cc',
  'heap' / 'allocation-observer.cc',
  'heap' / 'array-buffer-sweeper.cc',
  'heap' / 'base-space.cc',
  'heap' / 'basic-memory-chunk.cc',
  'heap' / 'code-object-registry.cc',
  'heap' / 'code-range.cc',
  'heap' / 'code-stats.cc',
  'heap' / 'collection-barrier.cc',
  'heap' / 'combined-heap.cc',
  'heap' / 'concurrent-allocator.cc',
  'heap' / 'concurrent-marking.cc',
  'heap' / 'cppgc-js' / 'cpp-heap.cc',
  'heap' / 'cppgc-js' / 'cpp-snapshot.cc',
  'heap' / 'cppgc-js' / 'unified-heap-marking-state.cc',
  'heap' / 'cppgc-js' / 'unified-heap-marking-verifier.cc',
  'heap' / 'cppgc-js' / 'unified-heap-marking-visitor.cc',
  'heap' / 'embedder-tracing.cc',
  'heap' / 'evacuation-verifier.cc',
  'heap' / 'factory-base.cc',
  'heap' / 'factory.cc',
  'heap' / 'finalization-registry-cleanup-task.cc',
  'heap' / 'free-list.cc',
  'heap' / 'gc-idle-time-handler.cc',
  'heap' / 'gc-tracer.cc',
  'heap' / 'global-handle-marking-visitor.cc',
  'heap' / 'heap-allocator.cc',
  'heap' / 'heap-controller.cc',
  'heap' / 'heap-layout-tracer.cc',
  'heap' / 'heap-verifier.cc',
  'heap' / 'heap-write-barrier.cc',
  'heap' / 'heap.cc',
  'heap' / 'incremental-marking-job.cc',
  'heap' / 'incremental-marking.cc',
  'heap' / 'index-generator.cc',
  'heap' / 'invalidated-slots.cc',
  'heap' / 'large-spaces.cc',
  'heap' / 'local-factory.cc',
  'heap' / 'local-heap.cc',
  'heap' / 'mark-compact.cc',
  'heap' / 'marking-barrier.cc',
  'heap' / 'marking-worklist.cc',
  'heap' / 'marking.cc',
  'heap' / 'memory-allocator.cc',
  'heap' / 'memory-chunk-layout.cc',
  'heap' / 'memory-chunk.cc',
  'heap' / 'memory-measurement.cc',
  'heap' / 'memory-reducer.cc',
  'heap' / 'new-spaces.cc',
  'heap' / 'object-stats.cc',
  'heap' / 'objects-visiting.cc',
  'heap' / 'paged-spaces.cc',
  'heap' / 'pretenuring-handler.cc',
  'heap' / 'read-only-heap.cc',
  'heap' / 'read-only-spaces.cc',
  'heap' / 'safepoint.cc',
  'heap' / 'scavenge-job.cc',
  'heap' / 'scavenger.cc',
  'heap' / 'slot-set.cc',
  'heap' / 'spaces.cc',
  'heap' / 'stress-marking-observer.cc',
  'heap' / 'stress-scavenge-observer.cc',
  'heap' / 'sweeper.cc',
  'heap' / 'weak-object-worklists.cc',
  'heap' / 'third-party' / 'heap-api-stub.cc',
  'heap' / 'base' / 'active-system-pages.cc',
  'heap' / 'base' / 'stack.cc',
  'heap' / 'base' / 'worklist.cc',
  'heap' / 'cppgc' / 'allocation.cc',
  'heap' / 'cppgc' / 'compaction-worklists.cc',
  'heap' / 'cppgc' / 'compactor.cc',
  'heap' / 'cppgc' / 'concurrent-marker.cc',
  'heap' / 'cppgc' / 'explicit-management.cc',
  'heap' / 'cppgc' / 'free-list.cc',
  'heap' / 'cppgc' / 'gc-info-table.cc',
  'heap' / 'cppgc' / 'gc-info.cc',
  'heap' / 'cppgc' / 'gc-invoker.cc',
  'heap' / 'cppgc' / 'heap-base.cc',
  'heap' / 'cppgc' / 'heap-consistency.cc',
  'heap' / 'cppgc' / 'heap-growing.cc',
  'heap' / 'cppgc' / 'heap-object-header.cc',
  'heap' / 'cppgc' / 'heap-page.cc',
  'heap' / 'cppgc' / 'heap-space.cc',
  'heap' / 'cppgc' / 'heap-state.cc',
  'heap' / 'cppgc' / 'heap-statistics-collector.cc',
  'heap' / 'cppgc' / 'heap.cc',
  'heap' / 'cppgc' / 'incremental-marking-schedule.cc',
  'heap' / 'cppgc' / 'liveness-broker.cc',
  'heap' / 'cppgc' / 'logging.cc',
  'heap' / 'cppgc' / 'marker.cc',
  'heap' / 'cppgc' / 'marking-state.cc',
  'heap' / 'cppgc' / 'marking-verifier.cc',
  'heap' / 'cppgc' / 'marking-visitor.cc',
  'heap' / 'cppgc' / 'marking-worklists.cc',
  'heap' / 'cppgc' / 'member-storage.cc',
  'heap' / 'cppgc' / 'memory.cc',
  'heap' / 'cppgc' / 'name-trait.cc',
  'heap' / 'cppgc' / 'object-allocator.cc',
  'heap' / 'cppgc' / 'object-size-trait.cc',
  'heap' / 'cppgc' / 'page-memory.cc',
  'heap' / 'cppgc' / 'persistent-node.cc',
  'heap' / 'cppgc' / 'platform.cc',
  'heap' / 'cppgc' / 'pointer-policies.cc',
  'heap' / 'cppgc' / 'prefinalizer-handler.cc',
  'heap' / 'cppgc' / 'process-heap-statistics.cc',
  'heap' / 'cppgc' / 'process-heap.cc',
  'heap' / 'cppgc' / 'raw-heap.cc',
  'heap' / 'cppgc' / 'remembered-set.cc',
  'heap' / 'cppgc' / 'source-location.cc',
  'heap' / 'cppgc' / 'stats-collector.cc',
  'heap' / 'cppgc' / 'sweeper.cc',
  'heap' / 'cppgc' / 'testing.cc',
  'heap' / 'cppgc' / 'trace-trait.cc',
  'heap' / 'cppgc' / 'virtual-memory.cc',
  'heap' / 'cppgc' / 'visitor.cc',
  'heap' / 'cppgc' / 'write-barrier.cc',
  'ic' / 'call-optimization.cc',
  'ic' / 'handler-configuration.cc',
  'ic' / 'ic-stats.cc',
  'ic' / 'ic.cc',
  'ic' / 'stub-cache.cc',
  'init' / 'bootstrapper.cc',
  'init' / 'icu_util.cc',
  'init' / 'isolate-allocator.cc',
  'init' / 'startup-data-util.cc',
  'init' / 'v8.cc',
  'interpreter' / 'bytecode-array-builder.cc',
  'interpreter' / 'bytecode-array-iterator.cc',
  'interpreter' / 'bytecode-array-random-iterator.cc',
  'interpreter' / 'bytecode-array-writer.cc',
  'interpreter' / 'bytecode-decoder.cc',
  'interpreter' / 'bytecode-flags.cc',
  'interpreter' / 'bytecode-generator.cc',
  'interpreter' / 'bytecode-label.cc',
  'interpreter' / 'bytecode-node.cc',
  'interpreter' / 'bytecode-operands.cc',
  'interpreter' / 'bytecode-register-optimizer.cc',
  'interpreter' / 'bytecode-register.cc',
  'interpreter' / 'bytecode-source-info.cc',
  'interpreter' / 'bytecodes.cc',
  'interpreter' / 'constant-array-builder.cc',
  'interpreter' / 'control-flow-builders.cc',
  'interpreter' / 'handler-table-builder.cc',
  'interpreter' / 'interpreter-intrinsics.cc',
  'interpreter' / 'interpreter.cc',
  'json' / 'json-parser.cc',
  'json' / 'json-stringifier.cc',
  'libsampler' / 'sampler.cc',
  'logging' / 'counters.cc',
  'logging' / 'local-logger.cc',
  'logging' / 'log-file.cc',
  'logging' / 'log.cc',
  'logging' / 'metrics.cc',
  'logging' / 'runtime-call-stats.cc',
  'logging' / 'tracing-flags.cc',
  'numbers' / 'conversions.cc',
  'numbers' / 'math-random.cc',
  'objects' / 'backing-store.cc',
  'objects' / 'bigint.cc',
  'objects' / 'call-site-info.cc',
  'objects' / 'code-kind.cc',
  'objects' / 'code.cc',
  'objects' / 'compilation-cache-table.cc',
  'objects' / 'contexts.cc',
  'objects' / 'debug-objects.cc',
  'objects' / 'elements-kind.cc',
  'objects' / 'elements.cc',
  'objects' / 'embedder-data-array.cc',
  'objects' / 'feedback-vector.cc',
  'objects' / 'field-type.cc',
  'objects' / 'js-array-buffer.cc',
  'objects' / 'js-atomics-synchronization.cc',
  'objects' / 'js-function.cc',
  'objects' / 'js-objects.cc',
  'objects' / 'js-raw-json.cc',
  'objects' / 'js-regexp.cc',
  'objects' / 'js-temporal-objects.cc',
  'objects' / 'keys.cc',
  'objects' / 'literal-objects.cc',
  'objects' / 'lookup-cache.cc',
  'objects' / 'lookup.cc',
  'objects' / 'managed.cc',
  'objects' / 'map-updater.cc',
  'objects' / 'map.cc',
  'objects' / 'module.cc',
  'objects' / 'object-type.cc',
  'objects' / 'objects.cc',
  'objects' / 'option-utils.cc',
  'objects' / 'ordered-hash-table.cc',
  'objects' / 'property-descriptor.cc',
  'objects' / 'property.cc',
  'objects' / 'scope-info.cc',
  'objects' / 'shared-function-info.cc',
  'objects' / 'simd.cc',
  'objects' / 'source-text-module.cc',
  'objects' / 'string-comparator.cc',
  'objects' / 'string-forwarding-table.cc',
  'objects' / 'string-table.cc',
  'objects' / 'string.cc',
  'objects' / 'swiss-name-dictionary.cc',
  'objects' / 'symbol-table.cc',
  'objects' / 'synthetic-module.cc',
  'objects' / 'tagged-impl.cc',
  'objects' / 'template-objects.cc',
  'objects' / 'templates.cc',
  'objects' / 'transitions.cc',
  'objects' / 'type-hints.cc',
  'objects' / 'value-serializer.cc',
  'objects' / 'visitors.cc',
  'parsing' / 'func-name-inferrer.cc',
  'parsing' / 'import-assertions.cc',
  'parsing' / 'literal-buffer.cc',
  'parsing' / 'parse-info.cc',
  'parsing' / 'parser.cc',
  'parsing' / 'parsing.cc',
  'parsing' / 'pending-compilation-error-handler.cc',
  'parsing' / 'preparse-data.cc',
  'parsing' / 'preparser.cc',
  'parsing' / 'rewriter.cc',
  'parsing' / 'scanner-character-streams.cc',
  'parsing' / 'scanner.cc',
  'parsing' / 'token.cc',
  'profiler' / 'allocation-tracker.cc',
  'profiler' / 'cpu-profiler.cc',
  'profiler' / 'heap-profiler.cc',
  'profiler' / 'heap-snapshot-generator.cc',
  'profiler' / 'profile-generator.cc',
  'profiler' / 'profiler-listener.cc',
  'profiler' / 'profiler-stats.cc',
  'profiler' / 'sampling-heap-profiler.cc',
  'profiler' / 'strings-storage.cc',
  'profiler' / 'symbolizer.cc',
  'profiler' / 'tick-sample.cc',
  'profiler' / 'tracing-cpu-profiler.cc',
  'profiler' / 'weak-code-registry.cc',
  'regexp' / 'experimental' / 'experimental-bytecode.cc',
  'regexp' / 'experimental' / 'experimental-compiler.cc',
  'regexp' / 'experimental' / 'experimental-interpreter.cc',
  'regexp' / 'experimental' / 'experimental.cc',
  'regexp' / 'regexp-ast.cc',
  'regexp' / 'regexp-bytecode-generator.cc',
  'regexp' / 'regexp-bytecode-peephole.cc',
  'regexp' / 'regexp-bytecodes.cc',
  'regexp' / 'regexp-compiler-tonode.cc',
  'regexp' / 'regexp-compiler.cc',
  'regexp' / 'regexp-dotprinter.cc',
  'regexp' / 'regexp-error.cc',
  'regexp' / 'regexp-interpreter.cc',
  'regexp' / 'regexp-macro-assembler-tracer.cc',
  'regexp' / 'regexp-macro-assembler.cc',
  'regexp' / 'regexp-parser.cc',
  'regexp' / 'regexp-stack.cc',
  'regexp' / 'regexp-utils.cc',
  'regexp' / 'regexp.cc',
  'roots' / 'roots.cc',
  'runtime' / 'runtime-array.cc',
  'runtime' / 'runtime-atomics.cc',
  'runtime' / 'runtime-bigint.cc',
  'runtime' / 'runtime-classes.cc',
  'runtime' / 'runtime-collections.cc',
  'runtime' / 'runtime-compiler.cc',
  'runtime' / 'runtime-date.cc',
  'runtime' / 'runtime-debug.cc',
  'runtime' / 'runtime-forin.cc',
  'runtime' / 'runtime-function.cc',
  'runtime' / 'runtime-futex.cc',
  'runtime' / 'runtime-generator.cc',
  'runtime' / 'runtime-internal.cc',
  'runtime' / 'runtime-literals.cc',
  'runtime' / 'runtime-module.cc',
  'runtime' / 'runtime-numbers.cc',
  'runtime' / 'runtime-object.cc',
  'runtime' / 'runtime-operators.cc',
  'runtime' / 'runtime-promise.cc',
  'runtime' / 'runtime-proxy.cc',
  'runtime' / 'runtime-regexp.cc',
  'runtime' / 'runtime-scopes.cc',
  'runtime' / 'runtime-shadow-realm.cc',
  'runtime' / 'runtime-strings.cc',
  'runtime' / 'runtime-symbol.cc',
  'runtime' / 'runtime-temporal.cc',
  'runtime' / 'runtime-test.cc',
  'runtime' / 'runtime-trace.cc',
  'runtime' / 'runtime-typedarray.cc',
  'runtime' / 'runtime-weak-refs.cc',
  'runtime' / 'runtime.cc',
  'sandbox' / 'external-pointer-table.cc',
  'sandbox' / 'sandbox.cc',
  'sandbox' / 'testing.cc',
  'snapshot' / 'code-serializer.cc',
  'snapshot' / 'context-deserializer.cc',
  'snapshot' / 'context-serializer.cc',
  'snapshot' / 'deserializer.cc',
  'snapshot' / 'embedded' / 'embedded-data.cc',
  'snapshot' / 'object-deserializer.cc',
  'snapshot' / 'read-only-deserializer.cc',
  'snapshot' / 'read-only-serializer.cc',
  'snapshot' / 'roots-serializer.cc',
  'snapshot' / 'serializer-deserializer.cc',
  'snapshot' / 'serializer.cc',
  'snapshot' / 'shared-heap-deserializer.cc',
  'snapshot' / 'shared-heap-serializer.cc',
  'snapshot' / 'snapshot-compression.cc',
  'snapshot' / 'snapshot-data.cc',
  'snapshot' / 'snapshot-source-sink.cc',
  'snapshot' / 'snapshot-utils.cc',
  'snapshot' / 'snapshot.cc',
  'snapshot' / 'startup-deserializer.cc',
  'snapshot' / 'startup-serializer.cc',
  'strings' / 'string-builder.cc',
  'strings' / 'string-case.cc',
  'strings' / 'string-stream.cc',
  'strings' / 'unicode-decoder.cc',
  'strings' / 'unicode.cc',
  'strings' / 'uri.cc',
  'tasks' / 'cancelable-task.cc',
  'tasks' / 'operations-barrier.cc',
  'tasks' / 'task-utils.cc',
  'temporal' / 'temporal-parser.cc',
  'third_party' / 'siphash' / 'halfsiphash.cc',
  'tracing' / 'trace-event.cc',
  'tracing' / 'traced-value.cc',
  'tracing' / 'tracing-category-observer.cc',
  'utils' / 'address-map.cc',
  'utils' / 'allocation.cc',
  'utils' / 'bit-vector.cc',
  'utils' / 'detachable-vector.cc',
  'utils' / 'identity-map.cc',
  'utils' / 'memcopy.cc',
  'utils' / 'ostreams.cc',
  'utils' / 'utils.cc',
  'utils' / 'version.cc',
  'web-snapshot' / 'web-snapshot.cc',
  'zone' / 'accounting-allocator.cc',
  'zone' / 'type-stats.cc',
  'zone' / 'zone-segment.cc',
  'zone' / 'zone.cc',
  'compiler' / 'access-builder.cc',
  'compiler' / 'access-info.cc',
  'compiler' / 'add-type-assertions-reducer.cc',
  'compiler' / 'all-nodes.cc',
  'compiler' / 'backend' / 'bitcast-elider.cc',
  'compiler' / 'backend' / 'code-generator.cc',
  'compiler' / 'backend' / 'frame-elider.cc',
  'compiler' / 'backend' / 'gap-resolver.cc',
  'compiler' / 'backend' / 'instruction-scheduler.cc',
  'compiler' / 'backend' / 'instruction-selector.cc',
  'compiler' / 'backend' / 'instruction.cc',
  'compiler' / 'backend' / 'jump-threading.cc',
  'compiler' / 'backend' / 'mid-tier-register-allocator.cc',
  'compiler' / 'backend' / 'move-optimizer.cc',
  'compiler' / 'backend' / 'register-allocator-verifier.cc',
  'compiler' / 'backend' / 'register-allocator.cc',
  'compiler' / 'backend' / 'spill-placer.cc',
  'compiler' / 'basic-block-instrumentor.cc',
  'compiler' / 'branch-condition-duplicator.cc',
  'compiler' / 'branch-elimination.cc',
  'compiler' / 'bytecode-analysis.cc',
  'compiler' / 'bytecode-graph-builder.cc',
  'compiler' / 'bytecode-liveness-map.cc',
  'compiler' / 'c-linkage.cc',
  'compiler' / 'checkpoint-elimination.cc',
  'compiler' / 'code-assembler.cc',
  'compiler' / 'common-node-cache.cc',
  'compiler' / 'common-operator-reducer.cc',
  'compiler' / 'common-operator.cc',
  'compiler' / 'compilation-dependencies.cc',
  'compiler' / 'compiler-source-position-table.cc',
  'compiler' / 'constant-folding-reducer.cc',
  'compiler' / 'control-equivalence.cc',
  'compiler' / 'control-flow-optimizer.cc',
  'compiler' / 'csa-load-elimination.cc',
  'compiler' / 'dead-code-elimination.cc',
  'compiler' / 'decompression-optimizer.cc',
  'compiler' / 'effect-control-linearizer.cc',
  'compiler' / 'escape-analysis-reducer.cc',
  'compiler' / 'escape-analysis.cc',
  'compiler' / 'fast-api-calls.cc',
  'compiler' / 'feedback-source.cc',
  'compiler' / 'frame-states.cc',
  'compiler' / 'frame.cc',
  'compiler' / 'graph-assembler.cc',
  'compiler' / 'graph-reducer.cc',
  'compiler' / 'graph-trimmer.cc',
  'compiler' / 'graph-visualizer.cc',
  'compiler' / 'graph.cc',
  'compiler' / 'heap-refs.cc',
  'compiler' / 'js-call-reducer.cc',
  'compiler' / 'js-context-specialization.cc',
  'compiler' / 'js-create-lowering.cc',
  'compiler' / 'js-generic-lowering.cc',
  'compiler' / 'js-graph.cc',
  'compiler' / 'js-heap-broker.cc',
  'compiler' / 'js-inlining-heuristic.cc',
  'compiler' / 'js-inlining.cc',
  'compiler' / 'js-intrinsic-lowering.cc',
  'compiler' / 'js-native-context-specialization.cc',
  'compiler' / 'js-operator.cc',
  'compiler' / 'js-type-hint-lowering.cc',
  'compiler' / 'js-typed-lowering.cc',
  'compiler' / 'late-escape-analysis.cc',
  'compiler' / 'linkage.cc',
  'compiler' / 'load-elimination.cc',
  'compiler' / 'loop-analysis.cc',
  'compiler' / 'loop-peeling.cc',
  'compiler' / 'loop-unrolling.cc',
  'compiler' / 'loop-variable-optimizer.cc',
  'compiler' / 'machine-graph-verifier.cc',
  'compiler' / 'machine-graph.cc',
  'compiler' / 'machine-operator-reducer.cc',
  'compiler' / 'machine-operator.cc',
  'compiler' / 'map-inference.cc',
  'compiler' / 'memory-lowering.cc',
  'compiler' / 'memory-optimizer.cc',
  'compiler' / 'node-marker.cc',
  'compiler' / 'node-matchers.cc',
  'compiler' / 'node-observer.cc',
  'compiler' / 'node-origin-table.cc',
  'compiler' / 'node-properties.cc',
  'compiler' / 'node.cc',
  'compiler' / 'opcodes.cc',
  'compiler' / 'operation-typer.cc',
  'compiler' / 'operator-properties.cc',
  'compiler' / 'operator.cc',
  'compiler' / 'osr.cc',
  'compiler' / 'pipeline-statistics.cc',
  'compiler' / 'pipeline.cc',
  'compiler' / 'property-access-builder.cc',
  'compiler' / 'raw-machine-assembler.cc',
  'compiler' / 'redundancy-elimination.cc',
  'compiler' / 'refs-map.cc',
  'compiler' / 'representation-change.cc',
  'compiler' / 'schedule.cc',
  'compiler' / 'scheduler.cc',
  'compiler' / 'select-lowering.cc',
  'compiler' / 'simplified-lowering-verifier.cc',
  'compiler' / 'simplified-lowering.cc',
  'compiler' / 'simplified-operator-reducer.cc',
  'compiler' / 'simplified-operator.cc',
  'compiler' / 'state-values-utils.cc',
  'compiler' / 'store-store-elimination.cc',
  'compiler' / 'type-cache.cc',
  'compiler' / 'type-narrowing-reducer.cc',
  'compiler' / 'typed-optimization.cc',
  'compiler' / 'typer.cc',
  'compiler' / 'types.cc',
  'compiler' / 'value-numbering-reducer.cc',
  'compiler' / 'verifier.cc',
  'compiler' / 'zone-stats.cc',
  'compiler' / 'turboshaft' / 'decompression-optimization.cc',
  'compiler' / 'turboshaft' / 'graph-builder.cc',
  'compiler' / 'turboshaft' / 'graph-visualizer.cc',
  'compiler' / 'turboshaft' / 'graph.cc',
  'compiler' / 'turboshaft' / 'operations.cc',
  'compiler' / 'turboshaft' / 'optimization-phase.cc',
  'compiler' / 'turboshaft' / 'recreate-schedule.cc',
  'compiler' / 'turboshaft' / 'representations.cc',
  'compiler' / 'turboshaft' / 'simplify-tf-loops.cc',
  'compiler' / 'turboshaft' / 'utils.cc',
  'utils' / 'hex-format.cc',
  'utils' / 'sha-256.cc',
]

if host_os == 'win' and host_is_64bit
  base_sources += 'diagnostics' / 'unwinding-info-win64.cc'
endif

if enable_advanced_bigint_algorithms
  base_sources += [
    'bigint' / 'div-barrett.cc',
    'bigint' / 'mul-fft.cc',
    'bigint' / 'mul-toom.cc',
  ]
endif

if enable_cppgc_caged_heap
  base_sources += [
    'heap' / 'cppgc' / 'caged-heap-local-data.cc',
    'heap' / 'cppgc' / 'caged-heap.cc',
  ]
endif

if enable_i18n
  base_sources += [
    'builtins' / 'builtins-intl.cc',
    'objects' / 'intl-objects.cc',
    'objects' / 'js-break-iterator.cc',
    'objects' / 'js-collator.cc',
    'objects' / 'js-date-time-format.cc',
    'objects' / 'js-display-names.cc',
    'objects' / 'js-duration-format.cc',
    'objects' / 'js-list-format.cc',
    'objects' / 'js-locale.cc',
    'objects' / 'js-number-format.cc',
    'objects' / 'js-plural-rules.cc',
    'objects' / 'js-relative-time-format.cc',
    'objects' / 'js-segment-iterator.cc',
    'objects' / 'js-segmenter.cc',
    'objects' / 'js-segments.cc',
    'runtime' / 'runtime-intl.cc',
    'strings' / 'char-predicates.cc',
  ]
endif

if enable_maglev
  base_sources += [
    'maglev' / 'maglev-code-generator.cc',
    'maglev' / 'maglev-compilation-info.cc',
    'maglev' / 'maglev-compilation-unit.cc',
    'maglev' / 'maglev-compiler.cc',
    'maglev' / 'maglev-concurrent-dispatcher.cc',
    'maglev' / 'maglev-graph-builder.cc',
    'maglev' / 'maglev-graph-printer.cc',
    'maglev' / 'maglev-interpreter-frame-state.cc',
    'maglev' / 'maglev-ir.cc',
    'maglev' / 'maglev-regalloc.cc',
    'maglev' / 'maglev.cc',
  ]
endif

if enable_wasm
  base_sources += [
    'asmjs' / 'asm-js.cc',
    'asmjs' / 'asm-parser.cc',
    'asmjs' / 'asm-scanner.cc',
    'asmjs' / 'asm-types.cc',
    'debug' / 'debug-wasm-objects.cc',
    'runtime' / 'runtime-test-wasm.cc',
    'runtime' / 'runtime-wasm.cc',
    'trap-handler' / 'handler-inside.cc',
    'trap-handler' / 'handler-outside.cc',
    'trap-handler' / 'handler-shared.cc',
    'wasm' / 'assembler-buffer-cache.cc',
    'wasm' / 'baseline' / 'liftoff-assembler.cc',
    'wasm' / 'baseline' / 'liftoff-compiler.cc',
    'wasm' / 'canonical-types.cc',
    'wasm' / 'code-space-access.cc',
    'wasm' / 'constant-expression-interface.cc',
    'wasm' / 'constant-expression.cc',
    'wasm' / 'function-body-decoder.cc',
    'wasm' / 'function-compiler.cc',
    'wasm' / 'graph-builder-interface.cc',
    'wasm' / 'jump-table-assembler.cc',
    'wasm' / 'local-decl-encoder.cc',
    'wasm' / 'memory-tracing.cc',
    'wasm' / 'module-compiler.cc',
    'wasm' / 'module-decoder.cc',
    'wasm' / 'module-instantiate.cc',
    'wasm' / 'names-provider.cc',
    'wasm' / 'pgo.cc',
    'wasm' / 'simd-shuffle.cc',
    'wasm' / 'stacks.cc',
    'wasm' / 'streaming-decoder.cc',
    'wasm' / 'sync-streaming-decoder.cc',
    'wasm' / 'value-type.cc',
    'wasm' / 'wasm-code-manager.cc',
    'wasm' / 'wasm-debug.cc',
    'wasm' / 'wasm-disassembler.cc',
    'wasm' / 'wasm-engine.cc',
    'wasm' / 'wasm-external-refs.cc',
    'wasm' / 'wasm-features.cc',
    'wasm' / 'wasm-import-wrapper-cache.cc',
    'wasm' / 'wasm-init-expr.cc',
    'wasm' / 'wasm-js.cc',
    'wasm' / 'wasm-module-builder.cc',
    'wasm' / 'wasm-module-sourcemap.cc',
    'wasm' / 'wasm-module.cc',
    'wasm' / 'wasm-objects.cc',
    'wasm' / 'wasm-opcodes.cc',
    'wasm' / 'wasm-result.cc',
    'wasm' / 'wasm-serialization.cc',
    'wasm' / 'wasm-subtyping.cc',
    'compiler' / 'int64-lowering.cc',
    'compiler' / 'wasm-compiler.cc',
    'compiler' / 'wasm-escape-analysis.cc',
    'compiler' / 'wasm-gc-lowering.cc',
    'compiler' / 'wasm-gc-operator-reducer.cc',
    'compiler' / 'wasm-graph-assembler.cc',
    'compiler' / 'wasm-inlining.cc',
    'compiler' / 'wasm-loop-peeling.cc',
    'compiler' / 'wasm-typer.cc',
  ]
endif

base_backend_sources = {
  'ia32': [
    'codegen' / 'ia32' / 'assembler-ia32.cc',
    'codegen' / 'ia32' / 'cpu-ia32.cc',
    'codegen' / 'ia32' / 'macro-assembler-ia32.cc',
    'codegen' / 'shared-ia32-x64' / 'macro-assembler-shared-ia32-x64.cc',
    'compiler' / 'backend' / 'ia32' / 'code-generator-ia32.cc',
    'compiler' / 'backend' / 'ia32' / 'instruction-scheduler-ia32.cc',
    'compiler' / 'backend' / 'ia32' / 'instruction-selector-ia32.cc',
    'deoptimizer' / 'ia32' / 'deoptimizer-ia32.cc',
    'diagnostics' / 'ia32' / 'disasm-ia32.cc',
    'diagnostics' / 'ia32' / 'unwinder-ia32.cc',
    'execution' / 'ia32' / 'frame-constants-ia32.cc',
    'regexp' / 'ia32' / 'regexp-macro-assembler-ia32.cc',
  ],
  'x64': [
    'codegen' / 'shared-ia32-x64' / 'macro-assembler-shared-ia32-x64.cc',
    'codegen' / 'x64' / 'assembler-x64.cc',
    'codegen' / 'x64' / 'cpu-x64.cc',
    'codegen' / 'x64' / 'macro-assembler-x64.cc',
    'compiler' / 'backend' / 'x64' / 'code-generator-x64.cc',
    'compiler' / 'backend' / 'x64' / 'instruction-scheduler-x64.cc',
    'compiler' / 'backend' / 'x64' / 'instruction-selector-x64.cc',
    'compiler' / 'backend' / 'x64' / 'unwinding-info-writer-x64.cc',
    'deoptimizer' / 'x64' / 'deoptimizer-x64.cc',
    'diagnostics' / 'x64' / 'disasm-x64.cc',
    'diagnostics' / 'x64' / 'eh-frame-x64.cc',
    'diagnostics' / 'x64' / 'unwinder-x64.cc',
    'execution' / 'x64' / 'frame-constants-x64.cc',
    'regexp' / 'x64' / 'regexp-macro-assembler-x64.cc',
  ],
  'arm': [
    'codegen' / 'arm' / 'assembler-arm.cc',
    'codegen' / 'arm' / 'constants-arm.cc',
    'codegen' / 'arm' / 'cpu-arm.cc',
    'codegen' / 'arm' / 'macro-assembler-arm.cc',
    'compiler' / 'backend' / 'arm' / 'code-generator-arm.cc',
    'compiler' / 'backend' / 'arm' / 'instruction-scheduler-arm.cc',
    'compiler' / 'backend' / 'arm' / 'instruction-selector-arm.cc',
    'compiler' / 'backend' / 'arm' / 'unwinding-info-writer-arm.cc',
    'deoptimizer' / 'arm' / 'deoptimizer-arm.cc',
    'diagnostics' / 'arm' / 'disasm-arm.cc',
    'diagnostics' / 'arm' / 'eh-frame-arm.cc',
    'diagnostics' / 'arm' / 'unwinder-arm.cc',
    'execution' / 'arm' / 'frame-constants-arm.cc',
    'execution' / 'arm' / 'simulator-arm.cc',
    'regexp' / 'arm' / 'regexp-macro-assembler-arm.cc',
  ],
  'arm64': [
    'codegen' / 'arm64' / 'assembler-arm64.cc',
    'codegen' / 'arm64' / 'cpu-arm64.cc',
    'codegen' / 'arm64' / 'decoder-arm64.cc',
    'codegen' / 'arm64' / 'instructions-arm64-constants.cc',
    'codegen' / 'arm64' / 'instructions-arm64.cc',
    'codegen' / 'arm64' / 'macro-assembler-arm64.cc',
    'codegen' / 'arm64' / 'register-arm64.cc',
    'codegen' / 'arm64' / 'utils-arm64.cc',
    'compiler' / 'backend' / 'arm64' / 'code-generator-arm64.cc',
    'compiler' / 'backend' / 'arm64' / 'instruction-scheduler-arm64.cc',
    'compiler' / 'backend' / 'arm64' / 'instruction-selector-arm64.cc',
    'compiler' / 'backend' / 'arm64' / 'unwinding-info-writer-arm64.cc',
    'deoptimizer' / 'arm64' / 'deoptimizer-arm64.cc',
    'diagnostics' / 'arm64' / 'disasm-arm64.cc',
    'diagnostics' / 'arm64' / 'eh-frame-arm64.cc',
    'diagnostics' / 'arm64' / 'unwinder-arm64.cc',
    'execution' / 'arm64' / 'frame-constants-arm64.cc',
    'execution' / 'arm64' / 'pointer-auth-arm64.cc',
    'execution' / 'arm64' / 'simulator-arm64.cc',
    'execution' / 'arm64' / 'simulator-logic-arm64.cc',
    'regexp' / 'arm64' / 'regexp-macro-assembler-arm64.cc',
  ],
}

base_generic_asm_sources = {
  'ia32': [
    'heap' / 'base' / 'asm' / 'ia32' / 'push_registers_asm.cc',
  ],
  'x64': [
    'heap' / 'base' / 'asm' / 'x64' / 'push_registers_asm.cc',
  ],
  'arm': [
    'heap' / 'base' / 'asm' / 'arm' / 'push_registers_asm.cc',
  ],
  'arm64': [
    'heap' / 'base' / 'asm' / 'arm64' / 'push_registers_asm.cc',
  ],
}

base_msvc_asm_sources = {
  'ia32': [
    'heap' / 'base' / 'asm' / 'ia32' / 'push_registers_masm.asm',
  ],
  'x64': [
    'heap' / 'base' / 'asm' / 'x64' / 'push_registers_masm.asm',
  ],
  'arm64': [
    'heap' / 'base' / 'asm' / 'arm64' / 'push_registers_masm.S',
  ],
}

base_arch_sources = {}
if is_clang_or_non_windows
  foreach arch : ['ia32', 'x64', 'arm', 'arm64']
    base_arch_sources += { arch: base_backend_sources[host_arch] + base_generic_asm_sources[arch] }
  endforeach
else
  foreach arch : msvc_required_archs
    objects = []
    command = msvc_asm_commands[arch]
    foreach source : base_msvc_asm_sources[arch]
      name = source.underscorify() + '.obj'
      objects += custom_target(name,
        input: source,
        output: name,
        command: command,
      )
    endforeach
    base_arch_sources += { arch: base_backend_sources[host_arch] + objects }
  endforeach
endif

bytecode_builtins_list_generator = executable('bytecode-builtins-list-generator', [
    'builtins' / 'generate-bytecodes-builtins-list.cc',
    'interpreter' / 'bytecode-operands.cc',
    'interpreter' / 'bytecodes.cc',
  ],
  override_options: cpp_options,
  implicit_include_directories: false,
  dependencies: [v8_libbase_runnable_dep],
  native: not meson.can_run_host_binaries(),
)

subdir('torque')

subdir('generated')
base_sources += bytecodes_builtins_list_h
base_sources += torque_generated_definitions

n = base_sources.length()
base_sources_part1 = []
base_sources_part2 = []
foreach i : range(n / 2)
  base_sources_part1 += base_sources[i]
endforeach
foreach i : range(n / 2, n)
  base_sources_part2 += base_sources[i]
endforeach

base_sources_part1 += torque_generated_headers
base_sources_part2 += torque_generated_headers

generated_headers = [bytecodes_builtins_list_h, torque_generated_headers]

v8_base_part1 = static_library('v8-base-part1', base_sources_part1,
  override_options: cpp_options,
  implicit_include_directories: false,
  dependencies: [v8_libbase_dep, compression_utils_portable_dep],
)
v8_base_part2 = static_library('v8-base-part2', base_sources_part2 + base_arch_sources[host_arch],
  override_options: cpp_options,
  implicit_include_directories: false,
  dependencies: [v8_libbase_dep, compression_utils_portable_dep],
)
if meson.can_run_host_binaries()
  v8_base_part1_runnable = v8_base_part1
  v8_base_part2_runnable = v8_base_part2
else
  v8_base_part1_runnable = static_library('v8-base-part1-native', base_sources_part1,
    override_options: cpp_options,
    implicit_include_directories: false,
    dependencies: [v8_libbase_runnable_dep, compression_utils_portable_runnable_dep],
    native: true,
  )
  v8_base_part2_runnable = static_library('v8-base-part2-native', base_sources_part2 + base_arch_sources[build_arch],
    override_options: cpp_options,
    implicit_include_directories: false,
    dependencies: [v8_libbase_runnable_dep, compression_utils_portable_runnable_dep],
    native: true,
  )
endif

v8_base_dep = declare_dependency(
  sources: generated_headers,
  include_directories: internal_incdirs,
  link_with: [v8_base_part1, v8_base_part2],
)
v8_base_runnable_dep = declare_dependency(
  sources: generated_headers,
  include_directories: internal_incdirs,
  link_with: [v8_base_part1_runnable, v8_base_part2_runnable],
)

init_sources = [
  'init' / 'setup-isolate-full.cc',
  'builtins' / 'builtins-array-gen.cc',
  'builtins' / 'builtins-async-function-gen.cc',
  'builtins' / 'builtins-async-gen.cc',
  'builtins' / 'builtins-async-generator-gen.cc',
  'builtins' / 'builtins-async-iterator-gen.cc',
  'builtins' / 'builtins-bigint-gen.cc',
  'builtins' / 'builtins-call-gen.cc',
  'builtins' / 'builtins-collections-gen.cc',
  'builtins' / 'builtins-constructor-gen.cc',
  'builtins' / 'builtins-conversion-gen.cc',
  'builtins' / 'builtins-date-gen.cc',
  'builtins' / 'builtins-generator-gen.cc',
  'builtins' / 'builtins-global-gen.cc',
  'builtins' / 'builtins-handler-gen.cc',
  'builtins' / 'builtins-ic-gen.cc',
  'builtins' / 'builtins-internal-gen.cc',
  'builtins' / 'builtins-interpreter-gen.cc',
  'builtins' / 'builtins-iterator-gen.cc',
  'builtins' / 'builtins-lazy-gen.cc',
  'builtins' / 'builtins-microtask-queue-gen.cc',
  'builtins' / 'builtins-number-gen.cc',
  'builtins' / 'builtins-object-gen.cc',
  'builtins' / 'builtins-promise-gen.cc',
  'builtins' / 'builtins-proxy-gen.cc',
  'builtins' / 'builtins-regexp-gen.cc',
  'builtins' / 'builtins-shadow-realm-gen.cc',
  'builtins' / 'builtins-sharedarraybuffer-gen.cc',
  'builtins' / 'builtins-string-gen.cc',
  'builtins' / 'builtins-temporal-gen.cc',
  'builtins' / 'builtins-typed-array-gen.cc',
  'builtins' / 'growable-fixed-array-gen.cc',
  'builtins' / 'profile-data-reader.cc',
  'builtins' / 'setup-builtins-internal.cc',
  'codegen' / 'code-stub-assembler.cc',
  'heap' / 'setup-heap-internal.cc',
  'ic' / 'accessor-assembler.cc',
  'ic' / 'binary-op-assembler.cc',
  'ic' / 'keyed-store-generic.cc',
  'ic' / 'unary-op-assembler.cc',
  'interpreter' / 'interpreter-assembler.cc',
  'interpreter' / 'interpreter-generator.cc',
  'interpreter' / 'interpreter-intrinsics-generator.cc',
  'builtins' / host_arch / 'builtins-' + host_arch + '.cc',
]
init_sources += torque_generated_initializers
if enable_i18n
  init_sources += 'builtins' / 'builtins-intl-gen.cc'
endif
if enable_wasm
  init_sources += 'builtins' / 'builtins-wasm-gen.cc'
endif

v8_init = static_library('v8-init', init_sources,
  override_options: cpp_options,
  implicit_include_directories: false,
  dependencies: [v8_base_runnable_dep],
  native: not meson.can_run_host_binaries(),
)

v8_init_dep = declare_dependency(link_with: v8_init)

subdir('libplatform')
subdir('snapshot')

v8_snapshot_sources = custom_target('v8-snapshot',
  output: [
    'embedded.S',
    'snapshot.cc',
  ],
  command: [
    mksnapshot,
    '--turbo-instruction-scheduling',
    '--target-os=' + host_os_nick,
    '--target-arch=' + host_arch,
    '--embedded-src', '@OUTPUT0@',
    '--startup-src', '@OUTPUT1@',
  ],
)
if not is_clang_or_non_windows
  name = 'embedded.obj'
  v8_snapshot_sources = [
    custom_target(name,
      input: v8_snapshot_sources[0],
      output: name,
      command: msvc_asm_commands[host_arch],
    ),
    v8_snapshot_sources[1],
  ]
endif

subdir('inspector')

v8 = library('v8-' + api_version, [
    'utils' / 'v8dll-main.cc',
    'init' / 'setup-isolate-deserialize.cc',
    v8_snapshot_sources,
  ],
  override_options: cpp_options,
  include_directories: internal_incdirs,
  implicit_include_directories: false,
  link_whole: [v8_base_part1, v8_base_part2, v8_libbase, v8_libplatform, v8_inspector],
  install: true,
)

client_flags = [
  '-DV8_GN_HEADER',
]
if get_option('default_library') != 'static'
  client_flags += [
    '-DUSING_V8_SHARED',
    '-DUSING_V8_PLATFORM_SHARED',
  ]
endif

v8_dep = declare_dependency(
  sources: [v8_gn_h],
  compile_args: client_flags,
  include_directories: public_incdirs,
  link_with: v8,
)

pkg = import('pkgconfig')
pkg.generate(v8,
  filebase: 'v8-' + api_version,
  name: 'V8',
  description: 'V8 JavaScript Engine',
  subdirs: 'v8-' + api_version,
  extra_cflags: client_flags,
)

meson.override_dependency('v8-' + api_version, v8_dep)
